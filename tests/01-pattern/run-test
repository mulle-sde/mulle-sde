#! /usr/bin/env bash

[ "${TRACE}" = "YES" ] && set -x && : "$0" "$@"


expect_pattern_matches_text()
{
   local pattern="$1"
   local text="$2"

   if ! pattern_matches_text "${pattern}" "${text}"
   then
      fail "Pattern \"${pattern}\" did not match text \"${text}\""
   fi
}


expect_pattern_not_matches_text()
{
   local pattern="$1"
   local text="$2"

   if pattern_matches_text "${pattern}" "${text}"
   then
      fail "Pattern \"${pattern}\" unexpectedly did match text \"${text}\""
   fi
}


main()
{
   MULLE_SDE_FLAGS="$@"

   _options_mini_main "$@"

   #
   # memo: remember we only deal with relative paths w/o leading /!
   # for simplicity it's also assumed that no relative path contain a
   # trailing '/'
   #
   expect_pattern_matches_text "a" "a"
   expect_pattern_matches_text "?" "a"
   expect_pattern_matches_text "*" "a"
   expect_pattern_matches_text "*a" "a"
   expect_pattern_matches_text "a*" "a"
   expect_pattern_matches_text "*a*" "a"
   expect_pattern_matches_text "[a]" "a"
   expect_pattern_matches_text "[a-z]" "a"
   log_verbose "----- #1 PASSED -----"

   expect_pattern_not_matches_text "b" "a"
   expect_pattern_not_matches_text "[b]" "a"
   log_verbose "----- #2 PASSED -----"

   expect_pattern_not_matches_text "!?" "a"
   expect_pattern_not_matches_text "!*" "a"
   expect_pattern_not_matches_text "!*a" "a"
   expect_pattern_not_matches_text "!a*" "a"
   expect_pattern_not_matches_text "!*a*" "a"
   expect_pattern_not_matches_text "![a]" "a"
   log_verbose "----- #3 PASSED -----"

   expect_pattern_matches_text "*.c" "a.c"
   expect_pattern_matches_text "*.c" "a.b.c"
   expect_pattern_matches_text "*.c" "a/b.c"
   log_verbose "----- #4 PASSED -----"

   expect_pattern_matches_text     "/foo" "foo"
   expect_pattern_not_matches_text "/foo" "foo/a.c"
   expect_pattern_not_matches_text "/foo" "bar/foo"
   expect_pattern_not_matches_text "/foo" "bar/foo/a.c"
   log_verbose "----- #5 PASSED -----"

   expect_pattern_matches_text     "foo/" "foo"
   expect_pattern_matches_text     "foo/" "foo/a.c"
   expect_pattern_not_matches_text "foo/" "bar/foo"
   expect_pattern_matches_text     "foo/" "bar/foo/a.c"
   log_verbose "----- #6 PASSED -----"

   expect_pattern_matches_text     "/foo/" "foo"
   expect_pattern_matches_text     "/foo/" "foo/a.c"
   expect_pattern_not_matches_text "/foo/" "bar/foo"
   expect_pattern_not_matches_text "/foo/" "bar/foo/a.c"
   log_verbose "----- #7 PASSED -----"

   log_info "----- ALL PASSED -----"
}



init()
{
   MULLE_BASHFUNCTIONS_LIBEXEC_DIR="`mulle-bashfunctions-env libexec-dir`" || exit 1

   . "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-bashfunctions.sh" || exit 1

   MULLE_SDE="${MULLE_SDE:-${PWD}/../../mulle-sde}"

   MULLE_SDE_LIBEXEC_DIR="`mulle-sde libexec-dir`" || exit 1

   . "${MULLE_SDE_LIBEXEC_DIR}/mulle-sde-pattern.sh" || exit 1
}


init "$@"
main "$@"

