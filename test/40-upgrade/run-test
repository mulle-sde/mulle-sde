#! /usr/bin/env bash

[ "${TRACE}" = 'YES' ] && set -x && : "$0" "$@"


run_mulle_sde()
{
   log_fluff "####################################" >&2
   log_fluff ${MULLE_SDE} ${MULLE_SDE_FLAGS} "$@"
   log_fluff "####################################" >&2

   (
      MULLE_EXECUTABLE="${MULLE_SDE}"
      MULLE_SDE_LIBEXEC_DIR="`${MULLE_SDE} libexec-dir`"

      . "${MULLE_SDE}" --no-auto-shell ${MULLE_SDE_FLAGS} "$@"
   )
}



expect()
{
   local expected_filename="$1"
   local filename="$2"

   local result
   local diff

   diff="`diff "${expected_filename}" "${filename}"`"
   case $? in
      0)
      ;;

      1)
         fail "${filename}:
${diff}"
      ;;

      *)
         fail "diff '${expected_filename}' '${filename}' failed"
      ;;
   esac
}


main()
{
   MULLE_SDE_FLAGS="$@"

   _options_mini_main "$@" && set -x

   MULLE_SDE_EXTENSION_PATH="${PWD}"
   export MULLE_SDE_EXTENSION_PATH

   local directory

   r_make_tmp_directory || exit 1
   directory="${RVAL}"
   directory="${directory:-/tmp/build}"



   run_mulle_sde init -d "${directory}" \
                      --no-post-init  \
                      -e test-vendor/extra \
                      -s mulle/wild \
                      none

   [ ! -d "${directory}/.mulle" ] && fail ".mulle directory failed"

   [ ! -f "${directory}/dir/share/file" ] && fail "\"${directory}/dir/share/file\" not present"

   log_verbose "----- #1 PASSED -----"

   # this checks (somewhat) that a superflous upgrade is harmless
   (
      rexekutor cd "${directory}" &&
      run_mulle_sde upgrade
   )

   [ ! -f "${directory}/dir/share/file" ] && fail "\"${directory}/dir/share/file\" not present any more"

   log_verbose "----- #2 PASSED -----"

   log_info "----- ALL PASSED -----"

   rmdir_safer "${directory}"
}



init()
{
   MULLE_BASHFUNCTIONS_LIBEXEC_DIR="`mulle-bashfunctions-env libexec-dir`" || exit 1

   . "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-bashfunctions.sh" "file" || exit 1

   MULLE_SDE="${MULLE_SDE:-${PWD}/../../mulle-sde}"
}


init "$@"
main "$@"

